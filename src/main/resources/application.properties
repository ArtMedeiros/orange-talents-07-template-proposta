# datasource
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_USER}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.jpa.hibernate.ddl-auto=${DDL:none}
spring.jpa.properties.hibernate.show_sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:false}

# APIs externas
analise.host=${ANALISE_HOST}
cartao.host=${CARTAO_HOST}

# jwt
prop.jwt.secret=${JWT_SECRET}
prop.jwt.expiration=${JWT_EXPIRATION}

#Actuator
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true

# Spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI}

# Jaeger - Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do serviço
opentracing.jaeger.service-name=${APP_NAME}

# Jaeger - Endereço para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (constante) ligado
opentracing.jaeger.const-sampler.decision=${JAEGER_SAMPLER:true}

# OpenTracing para JDBC
opentracing.spring.cloud.jdbc.enabled=false